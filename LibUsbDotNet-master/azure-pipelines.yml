variables:
  libusbBuild: 155 # 20200309.1
  libusbkBuild: 153 # 20200309.1

jobs:
- job: windows
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'specific'
      project: 'libusbdotnet'
      pipeline: '2'
      buildVersionToDownload: 'specific'
      buildId: $(libusbBuild)
      downloadType: 'single'
      artifactName: 'drop'
      downloadPath: '$(System.ArtifactsDirectory)'
    displayName: 'download libusb artifacts'

  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'specific'
      project: 'libusbdotnet'
      pipeline: '3'
      buildVersionToDownload: 'specific'
      buildId: $(libusbkBuild)
      downloadType: 'single'
      artifactName: 'drop'
      downloadPath: '$(System.ArtifactsDirectory)'
    displayName: 'download libusbK artifacts'

  - script: |
      dotnet pack src\LibUsbDotNet\LibUsbDotNet.csproj -c Release -o %BUILD_ARTIFACTSTAGINGDIRECTORY%
    displayName: 'Build'

  - script: |
      set PATH=%PATH%;%SYSTEM_ARTIFACTSDIRECTORY%\drop\runtimes\win-x64\native
      dotnet test src\LibUsbDotNet.Tests\LibUsbDotNet.Tests.csproj -p:RuntimeIdentifier=win7-x64
    displayName: 'Test (x64)'

  - script: |
      set PATH=%PATH%;%SYSTEM_ARTIFACTSDIRECTORY%\drop\runtimes\win-x86\native
      dotnet test src\LibUsbDotNet.Tests\LibUsbDotNet.Tests.csproj -p:RuntimeIdentifier=win7-x86
    displayName: 'Test (x86)'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
      artifactName: 'drop' 
      publishLocation: 'Container'
    displayName: 'Publish artifacts'

- job: osx
  pool:
    vmImage: 'macOS-10.15'
  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'specific'
      project: 'libusbdotnet'
      pipeline: '2'
      buildVersionToDownload: 'specific'
      buildId: $(libusbBuild)
      downloadType: 'single'
      artifactName: 'drop'
      downloadPath: '$(System.ArtifactsDirectory)'
    displayName: 'download libusb artifacts'

  - script: |
      dotnet pack src/LibUsbDotNet/LibUsbDotNet.csproj -c Release
    displayName: 'Build'

  - script: |
      export LD_LIBRARY_PATH=$SYSTEM_ARTIFACTSDIRECTORY/drop/runtimes/osx-x64/native:$LD_LIBRARY_PATH
      echo $LD_LIBRARY_PATH
      ls $SYSTEM_ARTIFACTSDIRECTORY/drop/runtimes/osx-x64/native
      dotnet test src/LibUsbDotNet.Tests/LibUsbDotNet.Tests.csproj -p:RuntimeIdentifier=osx.10.12-x64
    displayName: 'Test (x64)'

- job: ubuntu
  pool:
    vmImage: 'ubuntu-16.04'
  container:
    image: 'mcr.microsoft.com/dotnet/core/sdk:3.1-bionic'
    options: "--name ci-container -v /usr/bin/docker:/tmp/docker:ro"
  steps:
  - script: |
      /tmp/docker exec -t -u 0 ci-container \
      sh -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confold" -y install sudo"
    displayName: Set up sudo
  - script: |
      sudo apt-get install -y libusb-1.0-0
    displayName: 'Install dependencies'

  - script: |
      dotnet pack src/LibUsbDotNet/LibUsbDotNet.csproj -c Release
    displayName: 'Build'

  - script: |
      dotnet test src/LibUsbDotNet.Tests/LibUsbDotNet.Tests.csproj -p:RuntimeIdentifier=linux-x64
    displayName: 'Test (x64)'

- job: centos
  pool:
    vmImage: 'ubuntu-16.04'
  container:
    # image: 'registry.centos.org/dotnet/dotnet-31-centos7'
    image: 'centos:7'
    options: "--name ci-container -v /usr/bin/docker:/tmp/docker:ro"
  steps:
  - script: |
      /tmp/docker exec -t -u 0 ci-container \
      sh -c "yum install -y sudo"
    displayName: Set up sudo
  - script: |
      sudo yum install -y libusb
      sudo rpm -Uvh https://packages.microsoft.com/config/centos/7/packages-microsoft-prod.rpm
      sudo yum install -y dotnet-sdk-3.1
    displayName: 'Install dependencies'

  - script: |
      dotnet pack src/LibUsbDotNet/LibUsbDotNet.csproj -c Release
    displayName: 'Build'

  - script: |
      dotnet test src/LibUsbDotNet.Tests/LibUsbDotNet.Tests.csproj -p:RuntimeIdentifier=linux-x64
    displayName: 'Test (x64)'